package main

import (
	"fmt"
	"github.com/bwmarrin/discordgo"
	"strings"
)

func messageCreate(s *discordgo.Session, m *discordgo.MessageCreate) {
	// Ignore messages from the bot itself
	if m.Author.ID == s.State.User.ID {
		return
	}

	// Check if the message content starts with "!faceit"
	if strings.HasPrefix(m.Content, "!faceit") {
		// Extract nickname from message
		args := strings.Split(m.Content, " ")
		if len(args) < 2 {
			_, err := s.ChannelMessageSend(m.ChannelID, "Please provide a player nickname.")
			if err != nil {
				fmt.Println("Failed to send message:", err)
			}
			return
		}
		nickname := args[1]

		// Find player ID by nickname
		playerID, profile, err := FindNickName(nickname)
		if err != nil {
			_, err := s.ChannelMessageSend(m.ChannelID, fmt.Sprintf("Error finding player: %v", err))
			if err != nil {
				fmt.Println("Failed to send message:", err)
			}
			return
		}

		if playerID == "" {
			_, err := s.ChannelMessageSend(m.ChannelID, "Player not found.")
			if err != nil {
				fmt.Println("Failed to send message:", err)
			}
			return
		}

		// Fetch player statistics
		matchData, err := FetchPlayerStats(playerID)
		if err != nil {
			_, err := s.ChannelMessageSend(m.ChannelID, fmt.Sprintf("Error fetching player stats: %v", err))
			if err != nil {
				fmt.Println("Failed to send message:", err)
			}
			return
		}

		if len(matchData.Items) == 0 {
			_, err := s.ChannelMessageSend(m.ChannelID, "No match data found.")
			if err != nil {
				fmt.Println("Failed to send message:", err)
			}
			return
		}

		// Constructing the embed with photo
		embed := &discordgo.MessageEmbed{
			Title:       fmt.Sprintf("📊 Latest Match Stats for %s", nickname),
			Description: "Here are the average stats for the last 20 matches:",
			Color:       0x00ff00, // Green color

			Fields: []*discordgo.MessageEmbedField{
				{Name: "🔫 Average Kills", Value: StatsAverage(matchData.Items, "Kills"), Inline: true},
				{Name: "💀 Average Deaths", Value: StatsAverage(matchData.Items, "Deaths"), Inline: true},
				{Name: "🤝 Average Assists", Value: StatsAverage(matchData.Items, "Assists"), Inline: true},
				{Name: "🎯 Average Headshots %", Value: StatsAverage(matchData.Items, "HeadshotsPercentage"), Inline: true},
				{Name: "📈 Average ADR", Value: StatsAverage(matchData.Items, "Adr"), Inline: true},
				{Name: "📉 Average K/D Ratio", Value: StatsAverage(matchData.Items, "KdRatio"), Inline: true},
				{Name: "⚖️ Average K/R Ratio", Value: StatsAverage(matchData.Items, "KrRatio"), Inline: true},
				{Name: "Country", Value: profile.Country, Inline: true},
				{Name: "Profile Link", Value: fmt.Sprintf("[Click here to view profile](%s)", profile.FaceitURL), Inline: false},
			},

			Image: &discordgo.MessageEmbedImage{
				URL: profile.Avatar, // Replace with the actual URL of the image
			},

			Footer: &discordgo.MessageEmbedFooter{
				Text:    "Generated by Moroz",
				IconURL: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTMiypOIZIVG4pxIZi2iHlWl4BFjcqehIucNg&s", // Optional footer icon
			},
		}

		// Send the embed message
		_, err = s.ChannelMessageSendEmbed(m.ChannelID, embed)
		if err != nil {
			fmt.Println("Failed to send embed:", err)
		}
	}
}
